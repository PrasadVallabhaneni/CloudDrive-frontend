[{"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/index.js":"1","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/App.js":"2","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/Header.js":"3","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/signUp.js":"4","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/login.js":"5","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/alert.js":"6","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/forgotPass.js":"7","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/resetpass.js":"8","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/dashboard.js":"9","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/popover.js":"10","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/folderUpload.js":"11","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/folderView.js":"12","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/fileCards.js":"13","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/folderCards.js":"14","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/Loader.js":"15"},{"size":464,"mtime":1609168867507,"results":"16","hashOfConfig":"17"},{"size":1284,"mtime":1611138308609,"results":"18","hashOfConfig":"17"},{"size":1905,"mtime":1611325080662,"results":"19","hashOfConfig":"17"},{"size":3163,"mtime":1611328668179,"results":"20","hashOfConfig":"17"},{"size":3387,"mtime":1610960406163,"results":"21","hashOfConfig":"17"},{"size":292,"mtime":1610348844183,"results":"22","hashOfConfig":"17"},{"size":2050,"mtime":1610376677454,"results":"23","hashOfConfig":"17"},{"size":2584,"mtime":1610376662597,"results":"24","hashOfConfig":"17"},{"size":6539,"mtime":1611328276896,"results":"25","hashOfConfig":"17"},{"size":621,"mtime":1609349082402,"results":"26","hashOfConfig":"17"},{"size":2808,"mtime":1611325050197,"results":"27","hashOfConfig":"17"},{"size":4032,"mtime":1611225670299,"results":"28","hashOfConfig":"17"},{"size":2410,"mtime":1611133339292,"results":"29","hashOfConfig":"17"},{"size":3277,"mtime":1611226135000,"results":"30","hashOfConfig":"17"},{"size":321,"mtime":1610348762695,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1mg9ctn",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/index.js",[],["69","70"],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/App.js",["71","72"],"import React, { useState, useEffect } from \"react\";\n// import './App.css';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Signup from \"./components/signUp\";\nimport Login from \"./components/login\";\nimport ForgotPass from \"./components/forgotPass\";\nimport ResetPass from \"./components/resetpass\";\nimport Dashboard from \"./components/dashboard\";\nimport FolderView from \"./components/folderView\";\nfunction App() {\n  const [user, setUser] = useState();\n\n  const getUser = (username) => {\n    setUser(username);\n    console.log(user);\n  };\n  \n  return (\n    <>\n      <BrowserRouter>\n        <Header name={user} getUser={getUser} />\n        <Route exact path=\"/\" component={Login}></Route>\n        <Route path=\"/signup\" component={Signup}></Route>\n        <Route path=\"/login\" component={Login}></Route>\n        <Route path=\"/forgotForm\" component={ForgotPass}></Route>\n        <Route path=\"/reset\" component={ResetPass}></Route>\n        <Route\n          path=\"/dashboard/:id\"\n          component={(props) => <Dashboard getUser={getUser} />}\n        ></Route>\n        <Route path=\"/folder/:id/*\" component={FolderView}></Route>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/Header.js",["73","74","75"],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/signUp.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/login.js",["76"],"\nimport React, { useState,useEffect } from \"react\";\nimport { Container, Row, Col,Nav } from \"react-bootstrap\";\nimport Alert from './alert';\nimport { Link,Redirect } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Loader from './Loader'\nconst Login = () => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const {email, password } = user;\n  const [err,setErr]=useState();\n  const [loader,setLoader]=useState(false);\nconst [id,setIdd]=useState();\n  const onChange = (val) => {\n      setErr();\n    setUser({ ...user, [val.target.id]: val.target.value });\n\n  };\n\n  const onSubmit = async (val) => {\n      setLoader(true);\n      let email=user.email;\n      let password=user.password;\n    val.preventDefault();\n      let res = await fetch(\"https://s3drive-aws.herokuapp.com/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      let data=await res.json();\n        await setIdd(data.id);\n        await localStorage.setItem('id',data.id);\n        setLoader(false);\n        await setErr(data.message);\n        await localStorage.setItem(\"token\", data.token);\n     \n         \n     \n      \n      console.log(user,id,err);\n    //   return data\n  };\n\n  useEffect(()=>{\n      \n  })\n\n  return (\n     \n    <Container className=\"formCont\">\n      <Row>\n        <Col md={4}></Col>\n        <Col md={4}>\n          <h2>\n            <strong>Login</strong>\n          </h2>\n          {loader?<Loader/>:null}\n          {err==='success' && <Redirect  to={`/dashboard/${id}`}/>}\n          {err && <Alert message={err} variant='danger' />}\n          <form className=\"form\" onSubmit={onSubmit}>\n            <fieldset>\n              <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  class=\"form-control\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={onChange}\n                  required\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={onChange}\n                  required\n                />\n              </div>\n            </fieldset>\n            <LinkContainer to=\"/forgotForm\">\n              <Nav.Link>Forgot Password?</Nav.Link>\n            </LinkContainer>\n\n            <button\n              type=\"submit\"\n              value=\"Login\"\n              class=\"btn btn-success btn-block\"\n            >\n              Login\n            </button>\n            <Row>\n              <Col lg={6}>\n                <p style={{fontSize:'15px'}}>You dont have an account?</p>\n              </Col>\n              <Col lg={6}>\n                <LinkContainer to=\"/signup\">\n                  <Nav.Link>Register Here</Nav.Link>\n                </LinkContainer>\n              </Col>\n            </Row>\n          </form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Login;\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/alert.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/forgotPass.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/resetpass.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/dashboard.js",["77","78","79","80","81","82","83","84","85","86","87"],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/popover.js",["88"],"import React from 'react'\nimport {\n  Popover,OverlayTrigger,Button\n} from \"react-bootstrap\";\n\nconst Pop = (props) => {\n\n    const popover = (\n  <Popover id=\"popover-basic\">\n    <Popover.Content>\n     <button type='button' class='btn btn-danger' onClick={props.delete(props.key)}>Delete</button>\n    </Popover.Content>\n  </Popover>\n);\n\nconst Example = () => (\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n    <button style={{background:'none',border:'none'}}>\n      <i class=\"fas fa-ellipsis-v\"></i>\n    </button>\n  </OverlayTrigger>\n);\n    return (\n       <Example/>\n    )\n}\n\nexport default Pop\n",["89","90"],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/folderUpload.js",["91"],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/folderView.js",["92","93","94","95","96","97","98","99","100"],"import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\nimport {\n  Card,\n  Container,\n  Row,\n  Col,\n  DropdownButton,\n  Dropdown,\n  Button,\n} from \"react-bootstrap\";\nimport Loader from \"./Loader\";\nimport FileCards from \"./fileCards\";\nimport FolderCards from \"./folderCards\";\nconst FolderView = (props) => {\n  const [files, setFiles] = useState();\n  const [folders, setFolders] = useState();\n  const [mess, setMess] = useState(false);\n  const [pathname,setPathname]=useState();\n  const getData = async () => {\n    console.log(props.match.params[\"0\"]);\n    const name = props.match.params[\"0\"];\n    const data = await fetch(\"https://s3drive-aws.herokuapp.com/files\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        authorization: localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({ name }),\n    });\n    let status = await data.status;\n    if (status == 401) {\n      alert(\"Session ends please login again\");\n      if (alert) {\n        setMess(true);\n      }\n    } else {\n      let res = await data.json();\n      //   await setFiles(res.paths);\n      //   await setFolders(res.folders);\n      //   props.getUser(res.name);\n      res[0].forEach((file) => {\n        file.url =\n          \"https://googledriveclone.s3.ap-south-1.amazonaws.com/\" + file.Key;\n      });\n      res[1].forEach((folder) => {\n        folder.key = folder.Prefix;\n      });\n      console.log(res[0], res[1]);\n      setFiles(res[0]);\n      setFolders(res[1]);\n    }\n  };\n  const location = useLocation();\n  console.log(props);\n  useEffect(async () => {\n    getData();\n    setPathname(location.pathname.split('/').slice(3))\n    console.log(location);\n    console.log(files, folders);\n    //  console.log(id)\n  }, [location]);\n  // /folder/5ffbfdf580611c0017e71a02/Guvi-Portfolio/images/\"\n  return (\n    <Container style={{ marginTop: \"1%\" }}>\n      {mess ? <Redirect to=\"/login\" /> : null}\n      <Link to={{ pathname: `/dashboard/${localStorage.getItem(\"id\")}` }}>\n        Go Home\n      </Link>\n      <Container\n        style={{\n          fontSize: \"15px\",\n          margin: \"2%\",\n          backgroundColor: \"#F0F0F0\",\n          maxWidth:'400px',\n          borderRadius:'5px',\n\n        }}\n      >\n        {pathname &&\n          pathname.map((x, i) => {\n            return (\n              <p style={{ display: \"inline-flex\", marginRight: \"7px\",marginTop:'10px' }}>\n                <Link\n                  to={{\n                    pathname: `/folder/${localStorage.getItem(\"id\")}/${\n                      pathname.slice(0, i + 1).join(\"/\") + \"/\"\n                    }`,\n                    name: pathname.slice(0, i + 1).join(\"/\") + \"/\",\n                    deleteFile: location.deleteFile,\n                    id: localStorage.getItem(\"id\"),\n                  }}\n                >\n                  {\" \"}\n                  {x}\n                  {x && \"/\"}\n                </Link>\n              </p>\n            );\n          })}\n      </Container>\n      {/* <Button type='button' onClick={onClick}>Go Back</Button> */}\n      {/* <Link\n          to={{\n            name: props.location.pathname.split(\"/\"),\n            pathname: `${props.location.name\n              .split(\"/\")\n              .pop()\n              .join(\"/\")}`,\n\n            deleteFile: \"\",\n            id: props.location.id,\n          }}\n        >\n          Go Back\n        </Link> */}\n      <h3 style={{ marginTop: \"4%\" }}>Files</h3>\n      {files ?\n        (files.length ? (\n          <FileCards files={files} deleteFile={props.location.deleteFile} />\n        ) : (\n          \"No Files Found\"\n        )):<Loader/>}\n      <h3 style={{ marginTop: \"4%\" }}>Folders</h3>\n      {folders ?\n        (folders.length ? (\n          <FolderCards\n            folders={folders}\n            deleteFile={props.location.deleteFile}\n            id={props.location.id}\n          />\n        ) : (\n          \"No Folders Found\"\n        )):<Loader/>}\n    </Container>\n  );\n};\n\nexport default FolderView;\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/fileCards.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/folderCards.js",["101","102"],"import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { Card, Row, Col, Dropdown } from \"react-bootstrap\";\nconst FolderCards = ({folders,deleteFile}) => {\n  const id=localStorage.getItem('id')\n    // const deleteFolder= async (key)=>{\n    //       const name = key\n    //       const data = await fetch(\"http://localhost:4000/files\", {\n    //         method: \"POST\",\n    //         headers: {\n    //           \"Content-type\": \"application/json\",\n    //         },\n    //         body: JSON.stringify({ name }),\n    //       });\n\n    //       let res = await data.json();\n    //       //   await setFiles(res.paths);\n    //       //   await setFolders(res.folders);\n    //       //   props.getUser(res.name);\n    //       res[0].forEach((file) => {\n    //         file.url =\n    //           \"https://googledriveclone.s3.ap-south-1.amazonaws.com/\" +\n    //           file.Key;\n    //       });\n    //       res[1].forEach((folder) => {\n    //         folder.key = folder.Prefix;\n    //       });\n    //       console.log(res[0], res[1]);\n    //       setFiles(res[0]);\n    //       setFolders(res[1]);\n    \n\n    // }\n    const folderClick=()=>{\n      // console.log(folders)\n    }\n  return (\n    <div>\n      {folders ? (\n        <Row >\n          {folders.map((folder) => (\n            <Col key={folder.key} sm={12} md={6} lg={4} xl={3}>\n              <Card style={{ marginTop: \"10px\" }}>\n                <Card.Body id={folder.key}>\n                  <Row>\n                    <Col lg={12} sm={12} md={12} xs={12}>\n                      <Link\n                        to={{\n                          pathname: `/folder/${id}/${folder.key\n                           }`,\n                          name: folder.key,\n                          deleteFile:deleteFile,\n                          id: id,\n                          \n                        }}\n                      >\n                        <div>\n                          <i class=\"fas fa-folder\"></i>\n                        {folder.key.split('/').slice(-2)}\n                        </div>\n                      </Link>\n                    </Col>\n\n                    {/* <Col lg={2} sm={2} md={2} xs={2}> */}\n                    {/* <Popover delete={deleteFile} key={file.key} /> */}\n                    {/* <Dropdown>\n                        <Dropdown.Toggle\n                          style={{\n                            background: \"none\",\n                            color: \"black\",\n                            border: \"none\",\n                            padding: \"0px\",\n                          }}\n                          id=\"dropdown-basic\"\n                        ></Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                          <Dropdown.Item\n                            // onClick={() =>deleteFolder(folder.key+'/')}\n                          >\n                            Delete\n                          </Dropdown.Item>\n                        </Dropdown.Menu>\n                      </Dropdown> */}\n                    {/* </Col> */}\n                  </Row>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      ) : (\n        <h2>No folders uploaded</h2>\n      )}\n    </div>\n  );\n};\n\nexport default FolderCards;\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/Loader.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"111","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":19},{"ruleId":"107","severity":1,"message":"112","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":23},{"ruleId":"107","severity":1,"message":"113","line":8,"column":9,"nodeType":"109","messageId":"110","endLine":8,"endColumn":17},{"ruleId":"114","severity":1,"message":"115","line":34,"column":6,"nodeType":"116","endLine":34,"endColumn":28,"suggestions":"117"},{"ruleId":"107","severity":1,"message":"118","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":14},{"ruleId":"107","severity":1,"message":"119","line":2,"column":34,"nodeType":"109","messageId":"110","endLine":2,"endColumn":45},{"ruleId":"107","severity":1,"message":"120","line":4,"column":3,"nodeType":"109","messageId":"110","endLine":4,"endColumn":7},{"ruleId":"107","severity":1,"message":"121","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":8,"endColumn":17},{"ruleId":"107","severity":1,"message":"122","line":9,"column":3,"nodeType":"109","messageId":"110","endLine":9,"endColumn":11},{"ruleId":"107","severity":1,"message":"118","line":11,"column":9,"nodeType":"109","messageId":"110","endLine":11,"endColumn":13},{"ruleId":"107","severity":1,"message":"123","line":24,"column":8,"nodeType":"109","messageId":"110","endLine":24,"endColumn":12},{"ruleId":"107","severity":1,"message":"124","line":24,"column":13,"nodeType":"109","messageId":"110","endLine":24,"endColumn":20},{"ruleId":"107","severity":1,"message":"125","line":30,"column":7,"nodeType":"109","messageId":"110","endLine":30,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":45,"column":14,"nodeType":"128","messageId":"129","endLine":45,"endColumn":16},{"ruleId":"114","severity":1,"message":"130","line":143,"column":12,"nodeType":"131","endLine":146,"endColumn":2},{"ruleId":"114","severity":1,"message":"132","line":146,"column":3,"nodeType":"116","endLine":146,"endColumn":5,"suggestions":"133"},{"ruleId":"107","severity":1,"message":"134","line":3,"column":26,"nodeType":"109","messageId":"110","endLine":3,"endColumn":32},{"ruleId":"103","replacedBy":"135"},{"ruleId":"105","replacedBy":"136"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":24,"nodeType":"109","messageId":"110","endLine":1,"endColumn":33},{"ruleId":"107","severity":1,"message":"120","line":4,"column":3,"nodeType":"109","messageId":"110","endLine":4,"endColumn":7},{"ruleId":"107","severity":1,"message":"137","line":6,"column":3,"nodeType":"109","messageId":"110","endLine":6,"endColumn":6},{"ruleId":"107","severity":1,"message":"138","line":7,"column":3,"nodeType":"109","messageId":"110","endLine":7,"endColumn":6},{"ruleId":"107","severity":1,"message":"121","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":8,"endColumn":17},{"ruleId":"107","severity":1,"message":"122","line":9,"column":3,"nodeType":"109","messageId":"110","endLine":9,"endColumn":11},{"ruleId":"107","severity":1,"message":"134","line":10,"column":3,"nodeType":"109","messageId":"110","endLine":10,"endColumn":9},{"ruleId":"126","severity":1,"message":"127","line":32,"column":16,"nodeType":"128","messageId":"129","endLine":32,"endColumn":18},{"ruleId":"114","severity":1,"message":"130","line":56,"column":13,"nodeType":"131","endLine":62,"endColumn":4},{"ruleId":"114","severity":1,"message":"139","line":62,"column":6,"nodeType":"116","endLine":62,"endColumn":16,"suggestions":"140"},{"ruleId":"107","severity":1,"message":"122","line":3,"column":26,"nodeType":"109","messageId":"110","endLine":3,"endColumn":34},{"ruleId":"107","severity":1,"message":"141","line":34,"column":11,"nodeType":"109","messageId":"110","endLine":34,"endColumn":22},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'LinkContainer' is defined but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["144"],"'Link' is defined but never used.","'useLocation' is defined but never used.","'Card' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'onClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["145"],"'Button' is defined but never used.",["142"],["143"],"'Row' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has missing dependencies: 'files', 'folders', and 'getData'. Either include them or remove the dependency array.",["146"],"'folderClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [getUser, props.name, redirect]",{"range":"153","text":"154"},"Update the dependencies array to be: [getData]",{"range":"155","text":"156"},"Update the dependencies array to be: [files, folders, getData, location]",{"range":"157","text":"158"},[890,912],"[getUser, props.name, redirect]",[4159,4161],"[getData]",[1800,1810],"[files, folders, getData, location]"]