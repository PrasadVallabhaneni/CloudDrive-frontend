[{"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/index.js":"1","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/App.js":"2","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/Header.js":"3","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/signUp.js":"4","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/login.js":"5","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/alert.js":"6","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/forgotPass.js":"7","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/resetpass.js":"8","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/dashboard.js":"9","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/popover.js":"10"},{"size":464,"mtime":1609168867507,"results":"11","hashOfConfig":"12"},{"size":1108,"mtime":1609357545563,"results":"13","hashOfConfig":"12"},{"size":1511,"mtime":1609394669541,"results":"14","hashOfConfig":"12"},{"size":2793,"mtime":1609358223124,"results":"15","hashOfConfig":"12"},{"size":3089,"mtime":1609358208763,"results":"16","hashOfConfig":"12"},{"size":285,"mtime":1609179631821,"results":"17","hashOfConfig":"12"},{"size":1853,"mtime":1609186017311,"results":"18","hashOfConfig":"12"},{"size":2028,"mtime":1609187864541,"results":"19","hashOfConfig":"12"},{"size":6020,"mtime":1609393920703,"results":"20","hashOfConfig":"12"},{"size":621,"mtime":1609349082402,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1mg9ctn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/index.js",[],["46","47"],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/App.js",["48","49"],"import React,{useState,useEffect} from \"react\";\n// import './App.css';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Signup from \"./components/signUp\";\nimport Login from \"./components/login\";\nimport ForgotPass from './components/forgotPass';\nimport ResetPass from './components/resetpass';\nimport Dashboard from './components/dashboard';\nfunction App() {\n  const[user,setUser]=useState()\n\n  const getUser=(username)=>{\n       setUser(username)\n  }\n  //  useEffect(()=>{\n     \n  //  })\n  return (\n    <BrowserRouter>\n      <Header name={user} />\n      <Route exact path=\"/\" component={Login}></Route>\n      <Route path=\"/signup\" component={Signup}></Route>\n      <Route path=\"/login\" component={Login}></Route>\n      <Route path=\"/forgotForm\" component={ForgotPass}></Route>\n      <Route path=\"/reset\" component={ResetPass}></Route>\n      <Route\n        path=\"/dashboard/:id\"\n        component={(props) => <Dashboard getUser={getUser} />}\n      ></Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/Header.js",["50"],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/signUp.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/login.js",["51"],"\nimport React, { useState,useEffect } from \"react\";\nimport { Container, Row, Col,Nav } from \"react-bootstrap\";\nimport Alert from './alert';\nimport { Link,Redirect } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst Login = () => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const {email, password } = user;\n  const [err,setErr]=useState();\nconst [id,setIdd]=useState();\n  const onChange = (val) => {\n      setErr();\n    setUser({ ...user, [val.target.id]: val.target.value });\n\n  };\n\n  const onSubmit = async (val) => {\n      let email=user.email;\n      let password=user.password;\n    val.preventDefault();\n      let res = await fetch(\"https://s3drive-aws.herokuapp.com/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      let data=await res.json();\n      \n      await setIdd(data.id);\n      await setErr(data.message);\n      await localStorage.setItem(\"token\", data.token);\n      \n      console.log(user,id,err);\n    //   return data\n  };\n\n  useEffect(()=>{\n      \n  })\n\n  return (\n     \n    <Container className=\"formCont\">\n      <Row>\n        <Col md={4}></Col>\n        <Col md={4}>\n          <h2>\n            <strong>Login</strong>\n          </h2>\n          {err==='success' && <Redirect  to={`/dashboard/${id}`}/>}\n          {err && <Alert message={err} />}\n          <form className=\"form\" onSubmit={onSubmit}>\n            <fieldset>\n              <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  class=\"form-control\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={onChange}\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={onChange}\n                />\n              </div>\n            </fieldset>\n            <LinkContainer to=\"/forgotForm\">\n              <Nav.Link>Forgot Password?</Nav.Link>\n            </LinkContainer>\n\n            <button\n              type=\"submit\"\n              value=\"Login\"\n              class=\"btn btn-success btn-block\"\n            >\n              Login\n            </button>\n            <Row>\n              <Col lg={6}>\n                <p style={{fontSize:'15px'}}>You dont have an account?</p>\n              </Col>\n              <Col lg={6}>\n                <LinkContainer to=\"/signup\">\n                  <Nav.Link>Register Here</Nav.Link>\n                </LinkContainer>\n              </Col>\n            </Row>\n          </form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Login;\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/alert.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/forgotPass.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/resetpass.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/dashboard.js",["52","53","54","55","56","57","58"],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/popover.js",["59"],"import React from 'react'\nimport {\n  Popover,OverlayTrigger,Button\n} from \"react-bootstrap\";\n\nconst Pop = (props) => {\n\n    const popover = (\n  <Popover id=\"popover-basic\">\n    <Popover.Content>\n     <button type='button' class='btn btn-danger' onClick={props.delete(props.key)}>Delete</button>\n    </Popover.Content>\n  </Popover>\n);\n\nconst Example = () => (\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n    <button style={{background:'none',border:'none'}}>\n      <i class=\"fas fa-ellipsis-v\"></i>\n    </button>\n  </OverlayTrigger>\n);\n    return (\n       <Example/>\n    )\n}\n\nexport default Pop\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":24,"nodeType":"66","messageId":"67","endLine":1,"endColumn":33},{"ruleId":"64","severity":1,"message":"68","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":19},{"ruleId":"64","severity":1,"message":"69","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":23},{"ruleId":"64","severity":1,"message":"70","line":5,"column":10,"nodeType":"66","messageId":"67","endLine":5,"endColumn":14},{"ruleId":"64","severity":1,"message":"71","line":2,"column":34,"nodeType":"66","messageId":"67","endLine":2,"endColumn":45},{"ruleId":"64","severity":1,"message":"72","line":8,"column":3,"nodeType":"66","messageId":"67","endLine":8,"endColumn":17},{"ruleId":"64","severity":1,"message":"73","line":13,"column":8,"nodeType":"66","messageId":"67","endLine":13,"endColumn":15},{"ruleId":"64","severity":1,"message":"74","line":20,"column":7,"nodeType":"66","messageId":"67","endLine":20,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":34,"column":14,"nodeType":"77","messageId":"78","endLine":34,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":112,"column":12,"nodeType":"81","endLine":116,"endColumn":2},{"ruleId":"79","severity":1,"message":"82","line":116,"column":3,"nodeType":"83","endLine":116,"endColumn":5,"suggestions":"84"},{"ruleId":"64","severity":1,"message":"85","line":3,"column":26,"nodeType":"66","messageId":"67","endLine":3,"endColumn":32},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'LinkContainer' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'DropdownButton' is defined but never used.","'Popover' is defined but never used.","'onClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [getData]",{"range":"91","text":"92"},[3104,3106],"[getData]"]