[{"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/index.js":"1","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/App.js":"2","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/Header.js":"3","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/signUp.js":"4","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/login.js":"5","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/alert.js":"6","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/forgotPass.js":"7","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/resetpass.js":"8","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/dashboard.js":"9","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/popover.js":"10","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/folderUpload.js":"11","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/folderView.js":"12","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/fileCards.js":"13","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/folderCards.js":"14","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/Loader.js":"15"},{"size":464,"mtime":1609168867507,"results":"16","hashOfConfig":"17"},{"size":1227,"mtime":1609770585928,"results":"18","hashOfConfig":"17"},{"size":1564,"mtime":1610349348273,"results":"19","hashOfConfig":"17"},{"size":3047,"mtime":1610376730523,"results":"20","hashOfConfig":"17"},{"size":3337,"mtime":1610376547712,"results":"21","hashOfConfig":"17"},{"size":292,"mtime":1610348844183,"results":"22","hashOfConfig":"17"},{"size":2050,"mtime":1610376677454,"results":"23","hashOfConfig":"17"},{"size":2584,"mtime":1610376662597,"results":"24","hashOfConfig":"17"},{"size":5702,"mtime":1610373416420,"results":"25","hashOfConfig":"17"},{"size":621,"mtime":1609349082402,"results":"26","hashOfConfig":"17"},{"size":2724,"mtime":1610354529858,"results":"27","hashOfConfig":"17"},{"size":1692,"mtime":1610373491236,"results":"28","hashOfConfig":"17"},{"size":2435,"mtime":1610372947999,"results":"29","hashOfConfig":"17"},{"size":3272,"mtime":1610346162890,"results":"30","hashOfConfig":"17"},{"size":321,"mtime":1610348762695,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1mg9ctn",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/index.js",[],["71","72"],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/App.js",["73","74"],"import React,{useState,useEffect} from \"react\";\n// import './App.css';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Signup from \"./components/signUp\";\nimport Login from \"./components/login\";\nimport ForgotPass from './components/forgotPass';\nimport ResetPass from './components/resetpass';\nimport Dashboard from './components/dashboard';\nimport FolderView from './components/folderView'\nfunction App() {\n  const[user,setUser]=useState()\n\n  const getUser=(username)=>{\n       setUser(username)\n  }\n  //  useEffect(()=>{\n     \n  //  })\n  return (\n    <BrowserRouter>\n      <Header name={user} />\n      <Route exact path=\"/\" component={Login}></Route>\n      <Route path=\"/signup\" component={Signup}></Route>\n      <Route path=\"/login\" component={Login}></Route>\n      <Route path=\"/forgotForm\" component={ForgotPass}></Route>\n      <Route path=\"/reset\" component={ResetPass}></Route>\n      <Route\n        path=\"/dashboard/:id\"\n        component={(props) => <Dashboard getUser={getUser} />}\n      ></Route>\n      <Route path=\"/folder/:id/:path\" component={FolderView}></Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/Header.js",["75"],"import React,{useState,useEffect} from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nconst Header = (props) => {\nconst [redirect,setRedirect]=useState()\nconst [userName, setUserName] = useState(props.name);\n\nconst getUser=()=>{\n  if(redirect){\n    setUserName()\n  }else{\n    setUserName(props.name)\n  }\n}\nconst logout=async ()=>{\n  await localStorage.setItem(\"token\", \"\");\n  setUserName();\n   setRedirect(true);\n}\nuseEffect(()=>{\n getUser();\n})\n  return (\n    <header>\n      {redirect ? <Redirect to=\"/\" /> : null}\n      <Navbar bg=\"light\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          {/* <Link to=\"/dashboard\"> */}\n          <Navbar.Brand style={{ color: \"green\" }}>\n            <i class=\"fab fa-google-drive fa-2x\">My Drive</i>\n          </Navbar.Brand>\n          {/* </Link> */}\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <Nav.Link>\n                <i className=\"fas fa-user\"></i>&nbsp;\n                {userName? userName : <Link to='/'>Signin</Link>}\n              </Nav.Link>\n\n              {userName && (\n                <Nav.Link onClick={logout}>\n                  <i class=\"fas fa-sign-out-alt\"></i>&nbsp; Logout\n                </Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n\n\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/signUp.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/login.js",["76"],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/alert.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/forgotPass.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/resetpass.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/dashboard.js",["77","78","79","80","81","82","83","84","85","86","87"],"\nimport React,{useEffect,useState,useLocation} from 'react'\nimport {\n  Card,\n  Container,\n  Row,\n  Col,\n  DropdownButton,\n  Dropdown,\n} from \"react-bootstrap\";\nimport {Link,Redirect} from 'react-router-dom'\nimport S3 from 'react-aws-s3';\nimport FolderUpload from './folderUpload';\nimport FileCards from './fileCards';\nimport Loader from './Loader';\nimport FolderCards from './folderCards'\nconst Dashboard = (props) => {\n\n    const Id = window.location.href.split(\"/\").pop();\nconst [mess,setMess]=useState({redirect:false});\nconst [id,setId]=useState();\nconst [files, setFiles] = useState();\nconst [folders,setFolders]=useState();\nconst [inputFile,setInputfile]=useState();\nconst [inputFolder, setInputFolder] = useState();\nconst [loader,setLoader]=useState(false);\nconst onClick = (file) => {\n    \n  console.log(files);\n\n};\n\nconst getData=async ()=>{\n  setLoader(true)\n    const data = await fetch(\"https://s3drive-aws.herokuapp.com/user/\" + Id, {\n      method: \"GET\",\n      headers: {\n        authorization: localStorage.getItem(\"token\"),\n      },\n    });\n    let status=await data.status;\n    if(status==401){\n        alert('Session ends please login again');\n        if(alert){\n            setMess({redirect:true})\n        }\n    }else{\n          let res = await data.json();\n           setLoader(false);\n          await setFiles(res.paths);\n          await setFolders(res.folders);\n          // const Id = window.location.href.split(\"/\").pop();\n          setId(Id);\n          props.getUser(res.name);\n    }\n     \n}\nconst onChange=(e)=>{\n       setInputfile(e.target.files[0])\n       console.log(e.target.files)\n      //  console.log(e.target.files[0].webkitRelativePath);\n      \n}\nconst onChangeFolder = async(e) => {\n  await setInputFolder({folderName:e.target.files[0].webkitRelativePath,files:e.target.files});\n   const x = Object.entries(e.target.files);\n  console.log(x, inputFolder);\n   \n};\nconst onSubmit=async()=>{\n\n    //  e.preventDefault();\n    if(!inputFile){\n        alert('Please Choose a file')\n    }else{\n      setLoader(true)\n      let folder = \"\";\n          const config = {\n            bucketName: process.env.REACT_APP_AWS_BUCKET_NAME,\n            dirName:folder, /* optional */\n            region: \"ap-south-1\",\n            accessKeyId: process.env.REACT_APP_AWS_ID,\n            secretAccessKey: process.env.REACT_APP_AWS_SECRET,\n            // s3Url: 'https:/your-custom-s3-url.com/', /* optional */\n          };\n\n          const ReactS3Client = new S3(config);\n          // e.target.files[0].name.split('.').pop();\n          const newFileName = inputFile.name.split(\".\")[0];\n          console.log(newFileName);\n          ReactS3Client.uploadFile(inputFile, newFileName)\n            .then((data) => {\n              console.log(data);\n              let Key = data.key;\n              let url = data.location;\n              console.log(Key, url);\n              fetch(\"https://s3drive-aws.herokuapp.com/file/\" + id, {\n                method: \"POST\",\n                headers: {\n                  \"Content-type\": \"application/json\",\n                },\n                body: JSON.stringify({ Key, url }),\n              })\n                .then((res) => {\n                  \n                  console.log(res);\n                })\n                .then(async () => {\n                  setLoader(false)\n                  getData();\n                  setInputfile();\n                });\n            })\n            .catch((err) => console.error(err));\n    }\n\n \n}\n\nconst deleteFile=(key)=>{\n    // console.log(key)\n     const Key=key;\n      fetch(\"https://s3drive-aws.herokuapp.com/delete/\" + id, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify({ Key }),\n      })\n        .then((res) => {\n          console.log(res);\n        })\n        .then(async () => {\n          getData();\n        });\n}\n \n  \nuseEffect( async () => {\n   getData();\n  \n    //  console.log(id)\n},[])\n\n\n\n\n    return (\n      <Container style={{ marginTop: \"1%\" }}>\n        {mess.redirect ? <Redirect to=\"/login\" /> : null}\n        <div style={{ display: \"inline-flex\", flexWrap: \"no-wrap\" }}>\n          <div\n            class=\"form-group\"\n            style={{ width: \"250px\", marginRight: \"20px\" }}\n          >\n            <div class=\"input-group mb-3\">\n              <div class=\"custom-file\">\n                <input\n                  type=\"file\"\n                  class=\"custom-file-input\"\n                  id=\"inputGroupFile02\"\n                  onChange={onChange}\n                />\n                {/* <i class=\"fas fa-plus\"></i> */}\n                <label class=\"custom-file-label\" for=\"inputGroupFile02\">\n                  {inputFile ? inputFile.name : \"select file\"}\n                </label>\n              </div>\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-primary\"\n                  onClick={onSubmit}\n                >\n                  File Upload\n                </button>\n              </div>\n            </div>\n          </div>\n          <FolderUpload\n            onChangeFolder={onChangeFolder}\n            getData={getData}\n            setMess={setMess}\n            inputFolder={inputFolder}\n          />\n        </div>\n\n        {/* <button disabled type=\"button\" class=\"btn btn-outline-success\">\n          Create Folder\n        </button> */}\n        {loader?<Loader/>:null}\n       {files &&(<FileCards files={files} deleteFile={deleteFile} />\n       )}\n       {folders && <FolderCards folders={folders} id={id} deleteFile={deleteFile} />}\n      </Container>\n    );\n}\n\nexport default Dashboard\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/popover.js",["88"],"import React from 'react'\nimport {\n  Popover,OverlayTrigger,Button\n} from \"react-bootstrap\";\n\nconst Pop = (props) => {\n\n    const popover = (\n  <Popover id=\"popover-basic\">\n    <Popover.Content>\n     <button type='button' class='btn btn-danger' onClick={props.delete(props.key)}>Delete</button>\n    </Popover.Content>\n  </Popover>\n);\n\nconst Example = () => (\n  <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n    <button style={{background:'none',border:'none'}}>\n      <i class=\"fas fa-ellipsis-v\"></i>\n    </button>\n  </OverlayTrigger>\n);\n    return (\n       <Example/>\n    )\n}\n\nexport default Pop\n",["89","90"],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/folderUpload.js",["91"],"import React,{useState,useEffect} from 'react'\nimport S3 from \"react-aws-s3\";\nimport Loader from './Loader';\n\nconst FolderUpload = (props) => {\nconst id = window.location.href.split(\"/\").pop();\nconst [loader,setLoader]=useState(false);\nconst onSubmit = async () => {\n  //  e.preventDefault();\n  if (!props.inputFolder) {\n    alert(\"Please Choose a file\");\n  } else {\n     setLoader(true)\n    const files = Object.entries(props.inputFolder.files);\n    files.forEach(async (file) => {\n      const path = await file[1].webkitRelativePath.split(\"/\");\n      path.pop();\n      const config = {\n        bucketName: process.env.REACT_APP_AWS_BUCKET_NAME,\n        dirName: path.join(\"/\") /* optional */,\n        region: \"ap-south-1\",\n        accessKeyId: process.env.REACT_APP_AWS_ID,\n        secretAccessKey: process.env.REACT_APP_AWS_SECRET,\n        // s3Url: 'https:/your-custom-s3-url.com/', /* optional */\n      };\n\n      const ReactS3Client = new S3(config);\n      // e.target.files[0].name.split('.').pop();\n      const newFileName = file[1].name.split(\".\");\n      newFileName.pop();\n      console.log(newFileName);\n      ReactS3Client.uploadFile(file[1], newFileName.join(\"\"))\n        .then((data) => {\n          console.log(data);\n          \n        })\n        .catch((err) => console.error(err));\n    });\n    // console.log()\n    \n    let key = files[0][1].webkitRelativePath.split(\"/\")[0];\n    let url =null;\n    console.log(key, url);\n    fetch(\"https://s3drive-aws.herokuapp.com/folder/\" + id, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ key, url }),\n    })   \n      .then((res) => {\n        setLoader(false);\n          props.getData();\n        console.log(res);\n      })\n      \n  }\n}\n\n\n  \n    return (\n      <div>\n       {loader?<Loader/>:null}\n        <div class=\"form-group\" style={{ width: \"250px\" }}>\n          <div class=\"input-group mb-3\">\n            <div class=\"custom-file\">\n              <input\n                type=\"file\"\n                class=\"custom-file-input\"\n                id=\"inputGroupFile02\"\n                onChange={props.onChangeFolder}\n                webkitdirectory=\"true\"\n                directory\n                multiple\n              />\n              <label class=\"custom-file-label\" for=\"inputGroupFile02\">\n                {props.inputFolder ? props.inputFolder.folderName : \"folder\"}\n              </label>\n            </div>\n            <div class=\"input-group-append\">\n              <button type=\"button\" class=\"btn btn-primary\" onClick={onSubmit}>\n                Folder Upload\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default FolderUpload\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/folderView.js",["92","93","94","95","96","97","98","99"],"import React,{useState,useEffect} from 'react'\nimport { Link, Redirect } from \"react-router-dom\";\nimport {\n  Card,\n  Container,\n  Row,\n  Col,\n  DropdownButton,\n  Dropdown,\n} from \"react-bootstrap\";\nimport FileCards from './fileCards';\nimport FolderCards from './folderCards';\nconst FolderView = (props) => {\n \n    const[files,setFiles]=useState();\n    const[folders,setFolders]=useState();\n\nconst getData=async ()=>{\n    console.log(props.location.name)\n    const name=props.location.name\n    const data = await fetch(\"https://s3drive-aws.herokuapp.com/files\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ name }),\n    });\n   \n          let res = await data.json();\n        //   await setFiles(res.paths);\n        //   await setFolders(res.folders);\n        //   props.getUser(res.name);\n        res[0].forEach((file)=>{file.url =\n          \"https://googledriveclone.s3.ap-south-1.amazonaws.com/\"+file.Key});\n        res[1].forEach((folder)=>{\n              folder.key=folder.Prefix\n          })\n        console.log(res[0],res[1])  \n        setFiles(res[0]);\n        setFolders(res[1]); \n             \n}\n\nuseEffect(async () => {\n  getData();\n   console.log(files,folders)\n  //  console.log(id)\n}, []);\n\n    return (\n      <Container style={{ marginTop: \"1%\" }}>\n        <Link to={{pathname:`/dashboard/${props.location.id}`}}>Go Back</Link>\n        {files?<FileCards files={files} deleteFile={props.location.deleteFile} />:'Folder Empty'}\n\n        {folders?<FolderCards folders={folders} deleteFile={props.location.deleteFile} id={props.location.id} />:null}\n      </Container>\n    );\n}\n\nexport default FolderView\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/fileCards.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/folderCards.js",["100","101"],"import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { Card, Row, Col, Dropdown } from \"react-bootstrap\";\nconst FolderCards = ({folders,id,deleteFile}) => {\n\n    // const deleteFolder= async (key)=>{\n    //       const name = key\n    //       const data = await fetch(\"http://localhost:4000/files\", {\n    //         method: \"POST\",\n    //         headers: {\n    //           \"Content-type\": \"application/json\",\n    //         },\n    //         body: JSON.stringify({ name }),\n    //       });\n\n    //       let res = await data.json();\n    //       //   await setFiles(res.paths);\n    //       //   await setFolders(res.folders);\n    //       //   props.getUser(res.name);\n    //       res[0].forEach((file) => {\n    //         file.url =\n    //           \"https://googledriveclone.s3.ap-south-1.amazonaws.com/\" +\n    //           file.Key;\n    //       });\n    //       res[1].forEach((folder) => {\n    //         folder.key = folder.Prefix;\n    //       });\n    //       console.log(res[0], res[1]);\n    //       setFiles(res[0]);\n    //       setFolders(res[1]);\n    \n\n    // }\n    const folderClick=()=>{\n      // console.log(folders)\n    }\n  return (\n    <div>\n      {folders ? (\n        <Row style={{ marginTop: \"5%\" }}>\n          {folders.map((folder) => (\n            <Col key={folder.key} sm={12} md={6} lg={4} xl={3}>\n              <Card style={{ marginTop: \"10px\" }}>\n                <Card.Body id={folder.key}>\n                  <Row>\n                    <Col lg={12} sm={12} md={12} xs={12}>\n                      <Link\n                        to={{\n                          pathname: `/folder/${id}/${folder.key\n                            .split(\"/\")\n                            .join(\"\")}`,\n                          name: folder.key,\n                          deleteFile:deleteFile,\n                          id: id,\n                        }}\n                      >\n                        <div>\n                          <i class=\"fas fa-folder\"></i>\n                        {folder.key}\n                        </div>\n                      </Link>\n                    </Col>\n\n                    {/* <Col lg={2} sm={2} md={2} xs={2}> */}\n                    {/* <Popover delete={deleteFile} key={file.key} /> */}\n                    {/* <Dropdown>\n                        <Dropdown.Toggle\n                          style={{\n                            background: \"none\",\n                            color: \"black\",\n                            border: \"none\",\n                            padding: \"0px\",\n                          }}\n                          id=\"dropdown-basic\"\n                        ></Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                          <Dropdown.Item\n                            // onClick={() =>deleteFolder(folder.key+'/')}\n                          >\n                            Delete\n                          </Dropdown.Item>\n                        </Dropdown.Menu>\n                      </Dropdown> */}\n                    {/* </Col> */}\n                  </Row>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      ) : (\n        <h2>No folders uploaded</h2>\n      )}\n    </div>\n  );\n};\n\nexport default FolderCards;\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/googleDrive/client/src/components/Loader.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":24,"nodeType":"108","messageId":"109","endLine":1,"endColumn":33},{"ruleId":"106","severity":1,"message":"110","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":19},{"ruleId":"106","severity":1,"message":"111","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":23},{"ruleId":"106","severity":1,"message":"112","line":5,"column":10,"nodeType":"108","messageId":"109","endLine":5,"endColumn":14},{"ruleId":"106","severity":1,"message":"113","line":2,"column":34,"nodeType":"108","messageId":"109","endLine":2,"endColumn":45},{"ruleId":"106","severity":1,"message":"114","line":4,"column":3,"nodeType":"108","messageId":"109","endLine":4,"endColumn":7},{"ruleId":"106","severity":1,"message":"115","line":6,"column":3,"nodeType":"108","messageId":"109","endLine":6,"endColumn":6},{"ruleId":"106","severity":1,"message":"116","line":7,"column":3,"nodeType":"108","messageId":"109","endLine":7,"endColumn":6},{"ruleId":"106","severity":1,"message":"117","line":8,"column":3,"nodeType":"108","messageId":"109","endLine":8,"endColumn":17},{"ruleId":"106","severity":1,"message":"118","line":9,"column":3,"nodeType":"108","messageId":"109","endLine":9,"endColumn":11},{"ruleId":"106","severity":1,"message":"112","line":11,"column":9,"nodeType":"108","messageId":"109","endLine":11,"endColumn":13},{"ruleId":"106","severity":1,"message":"119","line":27,"column":7,"nodeType":"108","messageId":"109","endLine":27,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":42,"column":14,"nodeType":"122","messageId":"123","endLine":42,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":140,"column":12,"nodeType":"126","endLine":144,"endColumn":2},{"ruleId":"124","severity":1,"message":"127","line":144,"column":3,"nodeType":"128","endLine":144,"endColumn":5,"suggestions":"129"},{"ruleId":"106","severity":1,"message":"130","line":3,"column":26,"nodeType":"108","messageId":"109","endLine":3,"endColumn":32},{"ruleId":"102","replacedBy":"131"},{"ruleId":"104","replacedBy":"132"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":24,"nodeType":"108","messageId":"109","endLine":1,"endColumn":33},{"ruleId":"106","severity":1,"message":"133","line":2,"column":16,"nodeType":"108","messageId":"109","endLine":2,"endColumn":24},{"ruleId":"106","severity":1,"message":"114","line":4,"column":3,"nodeType":"108","messageId":"109","endLine":4,"endColumn":7},{"ruleId":"106","severity":1,"message":"115","line":6,"column":3,"nodeType":"108","messageId":"109","endLine":6,"endColumn":6},{"ruleId":"106","severity":1,"message":"116","line":7,"column":3,"nodeType":"108","messageId":"109","endLine":7,"endColumn":6},{"ruleId":"106","severity":1,"message":"117","line":8,"column":3,"nodeType":"108","messageId":"109","endLine":8,"endColumn":17},{"ruleId":"106","severity":1,"message":"118","line":9,"column":3,"nodeType":"108","messageId":"109","endLine":9,"endColumn":11},{"ruleId":"124","severity":1,"message":"125","line":44,"column":11,"nodeType":"126","endLine":48,"endColumn":2},{"ruleId":"124","severity":1,"message":"134","line":48,"column":4,"nodeType":"128","endLine":48,"endColumn":6,"suggestions":"135"},{"ruleId":"106","severity":1,"message":"118","line":3,"column":26,"nodeType":"108","messageId":"109","endLine":3,"endColumn":34},{"ruleId":"106","severity":1,"message":"136","line":34,"column":11,"nodeType":"108","messageId":"109","endLine":34,"endColumn":22},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'LinkContainer' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'onClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'Button' is defined but never used.",["137"],["138"],"'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'files', 'folders', and 'getData'. Either include them or remove the dependency array.",["140"],"'folderClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [getData]",{"range":"145","text":"146"},"Update the dependencies array to be: [files, folders, getData]",{"range":"147","text":"148"},[3997,3999],"[getData]",[1275,1277],"[files, folders, getData]"]